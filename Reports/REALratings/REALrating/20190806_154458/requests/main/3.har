{
  "log" : {
    "version" : "1.2",
    "creator" : {
      "name" : "BrowserMob Proxy",
      "version" : "2.1.5",
      "comment" : ""
    },
    "pages" : [ {
      "id" : "Page 0",
      "startedDateTime" : "2019-08-06T10:15:17.496Z",
      "title" : "Page 0",
      "pageTimings" : {
        "onLoad" : 922,
        "comment" : ""
      },
      "comment" : ""
    } ],
    "entries" : [ {
      "pageref" : "Page 0",
      "startedDateTime" : "2019-08-06T10:15:17.906Z",
      "request" : {
        "method" : "GET",
        "url" : "https://uat.realrating.co.uk/js/script.js",
        "httpVersion" : "HTTP/1.1",
        "cookies" : [ ],
        "headers" : [ {
          "name" : "User-Agent",
          "value" : "Katalon Studio"
        }, {
          "name" : "Host",
          "value" : "uat.realrating.co.uk"
        }, {
          "name" : "Accept",
          "value" : "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"
        }, {
          "name" : "Connection",
          "value" : "keep-alive"
        } ],
        "queryString" : [ ],
        "headersSize" : 174,
        "bodySize" : 0,
        "comment" : ""
      },
      "response" : {
        "status" : 200,
        "statusText" : "OK",
        "httpVersion" : "HTTP/1.1",
        "cookies" : [ ],
        "headers" : [ {
          "name" : "Date",
          "value" : "Tue, 06 Aug 2019 10:14:04 GMT"
        }, {
          "name" : "Server",
          "value" : "Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips mod_wsgi/3.4 Python/2.7.5 PHP/7.2.11"
        }, {
          "name" : "Last-Modified",
          "value" : "Mon, 05 Aug 2019 12:25:10 GMT"
        }, {
          "name" : "ETag",
          "value" : "\"3d7c-58f5dcc992eba\""
        }, {
          "name" : "Accept-Ranges",
          "value" : "bytes"
        }, {
          "name" : "Content-Length",
          "value" : "15740"
        }, {
          "name" : "Content-Type",
          "value" : "application/javascript"
        } ],
        "content" : {
          "size" : 15740,
          "mimeType" : "application/javascript",
          "text" : "var app = angular.module('myApp', []);\n\napp.filter('range', function () {\n    return function (input, min, max) {\n        for (var i = min; i <= max; i++) {\n            input.push(i);\n        }\n        return input;\n    };\n});\n\n\napp.filter('reverse', function () {\n    return function (items) {\n        return items.slice().reverse();\n    };\n});\n\n\napp.controller('myCtrl', function($scope, $http, $parse) {\n\n\n    //$scope.flag=false;\n    $scope.getUniversity = function() {\n\n        var url = '/university/get-universities';\n        $http.get(url).then(function(response) {\n\n            if (response.data.status == 'SUCCESS') {\n\n                $scope.universities = response.data.university;\n\n            }\n        });\n    }\n    $scope.getCourses = function() {\n        var url = '/course/get-courses';\n        $http.get(url).then(function(response) {\n\n            if (response.data.status == 'SUCCESS') {\n\n                $scope.courses = response.data.course;\n\n            }\n        });\n    }\n    \n    $scope.getcourseCategory = function() {\n\n        var url = '/courseCategory/get-courseCategories';\n        $http.get(url).then(function(response) {\n\n            if (response.data.status == 'SUCCESS') {\n                //console.log(JSON.stringify(response.data.CoursesCategory));\n                $scope.coursecategories = response.data.CoursesCategory;\n\n            }\n        });\n    }\n    $scope.getSchools = function() {\n\n        var url = '/school/get-schools';\n        $http.get(url).then(function(response) {\n\n            if (response.data.status == 'SUCCESS') {\n                $scope.schools = response.data.School;\n\n            }\n        });\n    }\n\n    $scope.getQualification = function() {\n\n        var url = '/university/main-qualification';\n        $http.get(url).then(function(response) {\n\n            if (response.data.status == 'SUCCESS') {\n                $scope.mainQualification = response.data.Qualification;\n\n            }\n        });\n    }\n\n    $scope.getReference = function() {\n\n        var url = '/real-reference';\n        $http.get(url).then(function(response) {\n\n            if (response.data.status == 'SUCCESS') {\n                $scope.Reference = response.data.Reference;\n                $scope.otherReferenceId = response.data.otherReferenceId;\n            }\n        });\n    }\n\n    $scope.getDisadvantages = function () {\n        var url = '/form/get-disadvantage';\n            $http.get(url).then(function (response) {\n                if (response.data.status == \"SUCCESS\") {\n                    $scope.disadvantages = response.data.disadvantages;\n                    $scope.otherDisadvantageId = response.data.otherId;\n               }\n        \n       });      \n    }\n\n\n    $scope.init = function() {\n            $scope.flag = false;\n            $scope.getCourses();\n            \n            $scope.getUniversity();\n            $scope.getcourseCategory();\n            $scope.getSchools();\n            $scope.getQualification();\n            $scope.getReference();\n            $scope.getDisadvantages();\n            $scope.Qual;\n            $scope.contact_form_data = {};\n            $scope.form_data = {};\n            $scope.alevels = [\n                {}, {}, {}\n            ];\n            \n\n            $(\".bg_load\").fadeOut(\"slow\");\n            $(\".wrapper\").fadeOut(\"slow\");\n            if (window.matchMedia('(max-width: 479px)').matches) {\n\n                $(\"#contact\").attr('style', 'display:block');\n            } else {\n                $(\"#contact\").attr('style', 'display:none');\n            }\n            $scope.gcseGrades = [\n                { id: 'A*', 'name': 'Grade A*' }, { id: 'A', 'name': 'Grade A' }, \n                { id: 'B', 'name': 'Grade B' }, \n                { id: 'C', 'name': 'Grade C' }, \n                { id: 'D', 'name': 'Grade D' }, \n                { id: 'E', 'name': 'Grade E' }, \n                { id: 'F', 'name': 'Grade F' },\n                { id: 'U', name: 'Grade U' }, \n                { id: 'DID_NOT_TAKE', name: 'Did not take' }\n            ];\n            $scope.btec_grades = {\n            'DD*D': \"DD*D\",\n            'D*DD*': 'D*DD*',\n            'D*DD': 'D*DD',\n            'DDD': 'DDD',\n            'DDM': 'DDM',\n            'DMM': 'DMM',\n            'MMM': 'MMM',\n            'MMP': 'MMP',\n            'MPP': 'MPP',\n            'PPP': 'PPP'\n        };\n\n        }\n       \n\n    $scope.errors = null;\n    $scope.starterrors = null;\n    $scope.init();\n   \n    $scope.navPageTwo = function(form_data) {  \n        $scope.resetmsg = false;     \n        $scope.starterrors = null;\n        var array = [\"ac.uk\", \"upreach.org.uk\", \"london.edu\", \"pearsoncollege.com\",\"bpp.com\"];\n        var university = [\"ac.uk\", \"london.edu\", \"pearsoncollege.com\",\"bpp.com\"];\n        var errors = [];\n        if ($scope.form_data.first_name == null) {\n            errors.push('Please enter your First Name');\n        }\n        if ($scope.form_data.last_name == null) {\n            errors.push('Please enter your Last Name');\n        }\n        if ($scope.form_data.email == null ) {\n            errors.push('Please enter valid university email');\n        }\n        if ($scope.form_data.email != null) {            \n            is_valid = true;\n            array.forEach(function(domain){\n                if($scope.form_data.email.match(domain)){\n                    is_valid = false;\n                    return !is_valid;\n                }\n            });\n            if(is_valid){\n                errors.push('Please enter your university email address, where we will send the Schroders to. This service is for current university students only.');\n            }\n        }\n        if (errors != '') {\n            $scope.starterrors = errors;\n            goToByScroll(\"startSection\");\n            \n        } else {\n            $scope.errorMessage = null;\n            if ($scope.form_data.email.match(\"upreach.org.uk\")){\n                $scope.form_data.regType = \"upreach\";\n            }\n            if (university.indexOf($scope.form_data.email)){\n                $scope.form_data.regType = \"university\";\n            }\n            document.getElementById(\"overlay\").style.display = \"block\";\n            var url = '/form/proceed';\n            $http.post(url, form_data).then(function(response) {\n                if (response.data.status == 'SUCCESS') {\n                    window.location.href = \"/getStarted/\"+response.data.UPR;\n                }else if (response.data.status == 'RESET') {\n                    document.getElementById(\"overlay\").style.display = \"none\";\n                    $scope.resetmsg = true;\n                    goToByScroll(\"startSection\");\n                } else {\n                    var errors = [];\n                    document.getElementById(\"overlay\").style.display = \"none\";\n                    errors.push(response.data.errors);\n                    $scope.starterrors = errors;\n                    goToByScroll(\"startSection\");\n                }\n             });\n        }\n    }\n   \n    $scope.resetProcess = function(form_data) {  \n\n        document.getElementById(\"overlay\").style.display = \"block\";\n        \n        var errors = [];\n        var url = '/reset/'+form_data.email;\n        $http.post(url, form_data).then(function(response) {\n            if (response.data.status == 'SUCCESS') {\n                document.getElementById(\"overlay\").style.display = \"none\";\n//                $scope.form_data = {};\n//                $scope.init();\n                $scope.resetmsg = false;\n                $scope.successMessageReal = response.data.message;\n                goToByScroll(\"startSection\");\n            } else {\n                var errors = [];\n                errors.push(response.data.errors);\n                $scope.starterrors = errors;\n                goToByScroll(\"startSection\");\n            }\n        });\n        \n    }\n\n\n\n\n    $scope.sendMail = function() {\n\n            var url = '/sendmail';\n            $http.post(url, $scope.real_data).then(function(response) {\n                if (response.data.status == 'SUCCESS') {\n\n                    $scope.successMessageReal = response.data.message;\n                    document.getElementById(\"overlay\").style.display = \"none\";\n                    $scope.form_data = {};\n                    $scope.init();\n                    goToByScroll(\"startSection\");\n                } else {\n                    var errors = [];\n                    \n                    errors.push(response.data.errors);\n                    $scope.starterrors = errors;\n                    goToByScroll(\"startSection\");\n                }\n            });\n        }\n\n\n    $scope.contactformSubmit = function(contact_form_data) {\n        \n        $scope.contact_form_data.captcha = grecaptcha.getResponse();\n        var errors = [];\n        var filter = /^0[0-9-+]+$/;\n        $scope.errors = null;\n        if (!$scope.contact_form_data.first_name) {\n            errors.push('Please enter your Firstname');\n        }\n\n        if (!$scope.contact_form_data.sur_name) {\n            errors.push('Please enter your Surname');\n        }\n\n        if (!$scope.contact_form_data.organisation) {\n            errors.push('Please enter your Organisation');\n        }\n        if (!$scope.contact_form_data.position) {\n            errors.push('Please enter your Position');\n        }\n        if (!$scope.contact_form_data.email_address ) {\n            errors.push('Please enter valid Email Address');\n        }\n        if (!$scope.contact_form_data.telephone) {\n            errors.push('Please enter your Telephone number');\n        } else if (!filter.test($scope.contact_form_data.telephone) || $scope.contact_form_data.telephone.length != 11) {\n            errors.push('Enter valid 11 digit Telephone number');\n        }\n        if (!$scope.contact_form_data.details) {\n            errors.push('Please enter the nature of your request');\n        }\n        if(!$scope.contact_form_data.captcha){\n            errors.push('Please enter valid Captcha');\n        }\n        if (errors != '') {\n            $scope.errors = errors;\n            goToByScroll(\"contactSection\");\n        } else {\n            document.getElementById(\"overlay\").style.display = \"block\";\n            var url = '/form/contactform';\n            $http.post(url, contact_form_data).then(function(response) {\n                if (response.data.status == 'SUCCESS') {\n                    $scope.successMessage = response.data.message;\n                    document.getElementById(\"overlay\").style.display = \"none\";\n                    grecaptcha.reset();\n                    $scope.contact_form_data = {};\n                    goToByScroll(\"contactSection\");\n                } else {\n                    var errors = [];\n                    $.each(response.data.errors, function(key, value) {\n                        errors.push(value);\n                    });\n                    document.getElementById(\"overlay\").style.display = \"none\";\n                    $scope.error = errors;\n                    goToByScroll(\"contactSection\");\n                    grecaptcha.reset();\n                }\n            });\n\n        }\n    }\n    \n    $scope.hideMessage = function(){\n        if($scope.starterrors){\n            delete $scope.starterrors;\n        }\n        if($scope.successMessageReal){\n            delete $scope.successMessageReal;\n        }\n        if($scope.resetmsg){  \n            delete $scope.resetmsg;\n        }\n        if($scope.errors){\n            delete $scope.errors;\n        }\n        if($scope.successMessage){\n            delete $scope.successMessage;\n        }\n    }\n   \n    $(\".a-level-auto-complete\").autocomplete({\n        source: \"/a-level-subject/autocomplete\",\n        minLength: 3,\n        search: function (event, ui) {\n\n        },\n        response: function (event, ui) {\n            var the_element = 'form_data.main_qualification_details.a_level.' + $(this).attr('id') + '_id';\n            var model = $parse(the_element);\n            model.assign($scope, '');\n        },\n        select: function (event, ui) {\n            $(this).val(ui.item.value);\n            var the_element = 'form_data.main_qualification_details.a_level.' + $(this).attr('id') + '_id';\n            var model = $parse(the_element);\n            model.assign($scope, ui.item.id);\n        }\n    });\n\n\n});\n\nfunction chartToImage(userId, alevelscore, realscore) {\n\n    var v1 = alevelscore;\n    var v2 = realscore;\n\n    function NormalDensityZx(x, Mean, StdDev) {\n        var a = x - Mean;\n        return Math.exp(-(a * a) / (6 * StdDev * StdDev)) / (Math.sqrt(24 * Math.PI) * StdDev);\n    }\n\n    var verticals = [\n        v1, v2\n    ];\n\n    var grade = [\"DDD\", \"CCC\", \"BBB\", \"AAA\", \"A*A*A*\"]\n    var a = 1;\n    var chartData = [];\n    for (var i = 42; i < 170; i += 1) {\n        var dp = {\n            category: i,\n            value: NormalDensityZx(i, 108, 24),\n\n        };\n        if (verticals.indexOf(Math.round(i * 24) / 24) !== -1) {\n            dp.vertical = dp.value;\n        }\n        chartData.push(dp);\n    }\n\n    var chart = AmCharts.makeChart(\"chartdiv\", {\n        \"type\": \"serial\",\n        \"theme\": \"light\",\n        \"dataProvider\": chartData,\n        \"autoDisplay\": true,\n        \"autoResize\": true,\n        \"precision\": 2,\n        \"valueAxes\": [{\n            \"gridAlpha\": 0.05,\n            \"dashLength\": 0,\n            \"labelsEnabled\": false,\n            \"tickLength\": 0\n        }],\n        \"startDuration\": 0,\n        \"export\": {\n            \"enabled\": true,\n            \"menu\": []\n        },\n        \"graphs\": [{\n            \"lineThickness\": 6,\n            \"valueField\": \"value\",\n            \"bold\": true,\n            \"lineColor\": \"#2196F3\"\n        }, {\n            \"fillAlphas\": 1,\n            \"type\": \"column\",\n\n            \"valueField\": \"\",\n            \"fixedColumnWidth\": 2,\n            \"labelText\": \"\",\n\n            \"bold\": true,\n            \"labelOffset\": 20\n        }],\n\n        \"guides\": [{\n            \"fillAlpha\": 0.15,\n            \"category\": v1,\n            \"toCategory\": v1,\n            \"lineColor\": \"blue\",\n            \"color\": \"black\",\n            \"lineAlpha\": 1,\n            \"fontSize\": \"25\",\n            \"lineThickness\": 0.8,\n            \"inside\": true,\n            \"label\": \"Your A-level Grade\",\n            \"labelRotation\": 90,\n            \"position\": \"top\",\n            \"above\": true,\n            \"dashLength\": 4\n        }, {\n            \"fillAlpha\": 0.15,\n            \"category\": v2,\n            \"toCategory\": v2,\n            \"boldLabel\": true,\n            \"color\": \"red\",\n            \"lineColor\": \"red\",\n            \"labelRotation\": 90,\n            \"lineAlpha\": 1,\n            \"fontSize\": \"25\",\n            \"lineThickness\": 0.8,\n            \"inside\": true,\n            \"position\": \"top\",\n            \"label\": \"Your REALrating Score\",\n            \"above\": true,\n\n            \"dashLength\": 4\n        }],\n\n        \"categoryField\": \"category\",\n        \"categoryAxis\": {\n            \"fontSize\": \"25\",\n            \"gridAlpha\": 0.05,\n            \"startOnAxis\": false,\n            \"tickLength\": 0\n        }\n\n    });\n    chart.export.capture({}, function() {\n\n        // SAVE TO JPG\n        this.toJPG({}, function(base64) {\n\n            // LOG IMAGE DATA\n            console.log(base64);\n            $.ajax({\n                headers: {\n                    'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n                },\n                method: \"POST\",\n                url: \"/service/url\",\n                // send the base64 post parameter\n                data: {\n                    base64: base64,\n                    userId: userId\n                },\n                // important POST method !                              \n                complete: function() {\n\n                }\n            });\n\n        });\n    });\n\n}\n\n",
          "comment" : ""
        },
        "redirectURL" : "",
        "headersSize" : 303,
        "bodySize" : 15740,
        "comment" : ""
      },
      "cache" : { },
      "timings" : {
        "comment" : "",
        "blocked" : 0,
        "wait" : 502,
        "connect" : 404,
        "receive" : 3,
        "send" : 1,
        "dns" : 0,
        "ssl" : 232
      },
      "serverIPAddress" : "35.177.213.25",
      "comment" : "",
      "_katalonRequestInformation" : {
        "name" : "3",
        "testObjectId" : "Temporary RESTful request object",
        "harId" : "5e8e1b6a-ca8e-4430-9be5-ab93970c7a13"
      },
      "time" : 911
    } ],
    "comment" : ""
  }
}